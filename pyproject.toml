[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
    "scikit-build-core >=0.4.3", 
    "nanobind >=1.3.2"
]
build-backend = "scikit_build_core.build"

[project]
authors = [
    {name = "Matthew A. Price"},
    {name = "Jason D. McEwen"},
    {name= "Contributors"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
]
description = "Differentiable and accelerated spherical transforms with JAX"
dependencies = [
    "numpy>=1.20",
    "jax>=0.3.13",
    "jaxlib",
    "torch",
]
dynamic = [
    "version",
]
keywords = [
]
name = "s2fft"
readme = "README.md"
requires-python = ">=3.8"
license.file = "LICENCE.txt"
urls.homepage = "https://github.com/astro-informatics/s2fft"

[project.optional-dependencies]
docs = [
    "sphinx>=5.0.0",
    "nbsphinx-link>=1.3.0",
    "pydata-sphinx-theme>=0.12.0",
    "sphinx_toolbox>=2.15.0",
    "sphinx-tabs>=3.2.0",
    "sphinxcontrib-bibtex>=2.4.1",
    "sphinx-git>=11.0.0",
    "sphinxcontrib-texfigure>=0.1.3",
    "sphinx-copybutton",
    "sphinxemoji",
    "sphinx_rtd_theme",
    "sphinx_mdinclude",
    "ipython>=7.16.1",
    "jupyter>=1.0.0",
]
plotting = [
    "pyvista",
    "trame",
    "ipykernel",
    "ipywidgets",
]
tests = [
    "ducc0",
    "healpy",
    "numpy<2",  # Required currently due to lack of Numpy v2 compatible pyssht release
    "pytest",
    "pytest-cov",
    "so3",
    "pyssht",
]

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"
# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"
# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["s2fft/_version.py"]

[tool.pytest.ini_options]
addopts = "--color=yes -v"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore:FutureWarning",
]

[tool.ruff]
fix = true
force-exclude = true
format.exclude = ["*.ipynb"]
lint.exclude = ["*.ipynb"]
lint.ignore = [
    "B023", # function-uses-loop-variable
    "COM812", # trailing commas (ruff-format recommended)
    "D100", # undocumented-public-module
    "D104", # undocumented-public-package
    "D203", # no-blank-line-before-class
    "D205", # blank line between summary and description in docstrings
    "D212", # multi-line-summary-first-line
    "D401", # non-imperative-mood
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
    "S101", # assert
]
lint.per-file-ignores = {"benchmarks*" = [
    "D", # No docstring checks in benchmarks
], "tests*" = [
    "D", # No docstring checks in tests
    "INP001", # File is part of an implicit namespace package.
    "S101", # Use of `assert` detected
], "__init__.py" = [
    "F401" # unused-import
]}
lint.select = [
    "B",
    "C90",
    "D",
    "E1",
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "S",
    "UP",
]
lint.isort.known-first-party = [
    "s2fft"
]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.setuptools]
packages = ["s2fft"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "s2fft/_version.py"
